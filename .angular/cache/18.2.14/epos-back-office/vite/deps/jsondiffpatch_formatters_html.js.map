{
  "version": 3,
  "sources": ["../../../../../../node_modules/.pnpm/jsondiffpatch@0.6.0/node_modules/jsondiffpatch/lib/formatters/base.js", "../../../../../../node_modules/.pnpm/jsondiffpatch@0.6.0/node_modules/jsondiffpatch/lib/formatters/html.js"],
  "sourcesContent": ["const trimUnderscore = str => {\n  if (str.substring(0, 1) === '_') {\n    return str.slice(1);\n  }\n  return str;\n};\nconst arrayKeyToSortNumber = key => {\n  if (key === '_t') {\n    return -1;\n  } else {\n    if (key.substring(0, 1) === '_') {\n      return parseInt(key.slice(1), 10);\n    } else {\n      return parseInt(key, 10) + 0.1;\n    }\n  }\n};\nconst arrayKeyComparer = (key1, key2) => arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);\nclass BaseFormatter {\n  format(delta, left) {\n    const context = {};\n    this.prepareContext(context);\n    const preparedContext = context;\n    this.recurse(preparedContext, delta, left);\n    return this.finalize(preparedContext);\n  }\n  prepareContext(context) {\n    context.buffer = [];\n    context.out = function (...args) {\n      this.buffer.push(...args);\n    };\n  }\n  typeFormattterNotFound(context, deltaType) {\n    throw new Error(`cannot format delta type: ${deltaType}`);\n  }\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  typeFormattterErrorFormatter(context, err, delta, leftValue, key, leftKey, movedFrom) {}\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  finalize({\n    buffer\n  }) {\n    if (Array.isArray(buffer)) {\n      return buffer.join('');\n    }\n  }\n  recurse(context, delta, left, key, leftKey, movedFrom, isLast) {\n    const useMoveOriginHere = delta && movedFrom;\n    const leftValue = useMoveOriginHere ? movedFrom.value : left;\n    if (typeof delta === 'undefined' && typeof key === 'undefined') {\n      return undefined;\n    }\n    const type = this.getDeltaType(delta, movedFrom);\n    const nodeType = type === 'node' ? delta._t === 'a' ? 'array' : 'object' : '';\n    if (typeof key !== 'undefined') {\n      this.nodeBegin(context, key, leftKey, type, nodeType, isLast);\n    } else {\n      this.rootBegin(context, type, nodeType);\n    }\n    let typeFormattter;\n    try {\n      typeFormattter = type !== 'unknown' ? this[`format_${type}`] : this.typeFormattterNotFound(context, type);\n      typeFormattter.call(this, context, delta, leftValue, key, leftKey, movedFrom);\n    } catch (err) {\n      this.typeFormattterErrorFormatter(context, err, delta, leftValue, key, leftKey, movedFrom);\n      if (typeof console !== 'undefined' && console.error) {\n        console.error(err.stack);\n      }\n    }\n    if (typeof key !== 'undefined') {\n      this.nodeEnd(context, key, leftKey, type, nodeType, isLast);\n    } else {\n      this.rootEnd(context, type, nodeType);\n    }\n  }\n  formatDeltaChildren(context, delta, left) {\n    this.forEachDeltaKey(delta, left, (key, leftKey, movedFrom, isLast) => {\n      this.recurse(context, delta[key], left ? left[leftKey] : undefined, key, leftKey, movedFrom, isLast);\n    });\n  }\n  forEachDeltaKey(delta, left, fn) {\n    const keys = Object.keys(delta);\n    const arrayKeys = delta._t === 'a';\n    const moveDestinations = {};\n    let name;\n    if (typeof left !== 'undefined') {\n      for (name in left) {\n        if (Object.prototype.hasOwnProperty.call(left, name)) {\n          if (typeof delta[name] === 'undefined' && (!arrayKeys || typeof delta[`_${name}`] === 'undefined')) {\n            keys.push(name);\n          }\n        }\n      }\n    }\n    // look for move destinations\n    for (name in delta) {\n      if (Object.prototype.hasOwnProperty.call(delta, name)) {\n        const value = delta[name];\n        if (Array.isArray(value) && value[2] === 3) {\n          const movedDelta = value;\n          moveDestinations[`${movedDelta[1]}`] = {\n            key: name,\n            value: left && left[parseInt(name.substring(1), 10)]\n          };\n          if (this.includeMoveDestinations !== false) {\n            if (typeof left === 'undefined' && typeof delta[movedDelta[1]] === 'undefined') {\n              keys.push(movedDelta[1].toString());\n            }\n          }\n        }\n      }\n    }\n    if (arrayKeys) {\n      keys.sort(arrayKeyComparer);\n    } else {\n      keys.sort();\n    }\n    for (let index = 0, length = keys.length; index < length; index++) {\n      const key = keys[index];\n      if (arrayKeys && key === '_t') {\n        continue;\n      }\n      const leftKey = arrayKeys ? parseInt(trimUnderscore(key), 10) : key;\n      const isLast = index === length - 1;\n      fn(key, leftKey, moveDestinations[leftKey], isLast);\n    }\n  }\n  getDeltaType(delta, movedFrom) {\n    if (typeof delta === 'undefined') {\n      if (typeof movedFrom !== 'undefined') {\n        return 'movedestination';\n      }\n      return 'unchanged';\n    }\n    if (Array.isArray(delta)) {\n      if (delta.length === 1) {\n        return 'added';\n      }\n      if (delta.length === 2) {\n        return 'modified';\n      }\n      if (delta.length === 3 && delta[2] === 0) {\n        return 'deleted';\n      }\n      if (delta.length === 3 && delta[2] === 2) {\n        return 'textdiff';\n      }\n      if (delta.length === 3 && delta[2] === 3) {\n        return 'moved';\n      }\n    } else if (typeof delta === 'object') {\n      return 'node';\n    }\n    return 'unknown';\n  }\n  parseTextDiff(value) {\n    const output = [];\n    const lines = value.split('\\n@@ ');\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      const lineOutput = {\n        pieces: []\n      };\n      const location = /^(?:@@ )?[-+]?(\\d+),(\\d+)/.exec(line).slice(1);\n      lineOutput.location = {\n        line: location[0],\n        chr: location[1]\n      };\n      const pieces = line.split('\\n').slice(1);\n      for (let pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n        const piece = pieces[pieceIndex];\n        if (!piece.length) {\n          continue;\n        }\n        const pieceOutput = {\n          type: 'context'\n        };\n        if (piece.substring(0, 1) === '+') {\n          pieceOutput.type = 'added';\n        } else if (piece.substring(0, 1) === '-') {\n          pieceOutput.type = 'deleted';\n        }\n        pieceOutput.text = piece.slice(1);\n        lineOutput.pieces.push(pieceOutput);\n      }\n      output.push(lineOutput);\n    }\n    return output;\n  }\n}\nexport default BaseFormatter;", "import BaseFormatter from './base.js';\nclass HtmlFormatter extends BaseFormatter {\n  typeFormattterErrorFormatter(context, err) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    context.out(`<pre class=\"jsondiffpatch-error\">${err}</pre>`);\n  }\n  formatValue(context, value) {\n    context.out(`<pre>${htmlEscape(JSON.stringify(value, null, 2))}</pre>`);\n  }\n  formatTextDiffString(context, value) {\n    const lines = this.parseTextDiff(value);\n    context.out('<ul class=\"jsondiffpatch-textdiff\">');\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      context.out('<li><div class=\"jsondiffpatch-textdiff-location\">' + `<span class=\"jsondiffpatch-textdiff-line-number\">${line.location.line}</span><span class=\"jsondiffpatch-textdiff-char\">${line.location.chr}</span></div><div class=\"jsondiffpatch-textdiff-line\">`);\n      const pieces = line.pieces;\n      for (let pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n        const piece = pieces[pieceIndex];\n        context.out(`<span class=\"jsondiffpatch-textdiff-${piece.type}\">${htmlEscape(decodeURI(piece.text))}</span>`);\n      }\n      context.out('</div></li>');\n    }\n    context.out('</ul>');\n  }\n  rootBegin(context, type, nodeType) {\n    const nodeClass = `jsondiffpatch-${type}${nodeType ? ` jsondiffpatch-child-node-type-${nodeType}` : ''}`;\n    context.out(`<div class=\"jsondiffpatch-delta ${nodeClass}\">`);\n  }\n  rootEnd(context) {\n    context.out(`</div>${context.hasArrows ? '<script type=\"text/javascript\">setTimeout(' + `${adjustArrows.toString()},10);</script>` : ''}`);\n  }\n  nodeBegin(context, key, leftKey, type, nodeType) {\n    const nodeClass = `jsondiffpatch-${type}${nodeType ? ` jsondiffpatch-child-node-type-${nodeType}` : ''}`;\n    context.out(`<li class=\"${nodeClass}\" data-key=\"${leftKey}\">` + `<div class=\"jsondiffpatch-property-name\">${leftKey}</div>`);\n  }\n  nodeEnd(context) {\n    context.out('</li>');\n  }\n  format_unchanged(context, delta, left) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, left);\n    context.out('</div>');\n  }\n  format_movedestination(context, delta, left) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, left);\n    context.out('</div>');\n  }\n  format_node(context, delta, left) {\n    // recurse\n    const nodeType = delta._t === 'a' ? 'array' : 'object';\n    context.out(`<ul class=\"jsondiffpatch-node jsondiffpatch-node-type-${nodeType}\">`);\n    this.formatDeltaChildren(context, delta, left);\n    context.out('</ul>');\n  }\n  format_added(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, delta[0]);\n    context.out('</div>');\n  }\n  format_modified(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value jsondiffpatch-left-value\">');\n    this.formatValue(context, delta[0]);\n    context.out('</div>' + '<div class=\"jsondiffpatch-value jsondiffpatch-right-value\">');\n    this.formatValue(context, delta[1]);\n    context.out('</div>');\n  }\n  format_deleted(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, delta[0]);\n    context.out('</div>');\n  }\n  format_moved(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, delta[0]);\n    context.out(`</div><div class=\"jsondiffpatch-moved-destination\">${delta[1]}</div>`);\n    // draw an SVG arrow from here to move destination\n    context.out(/* jshint multistr: true */\n    '<div class=\"jsondiffpatch-arrow\" ' + `style=\"position: relative; left: -34px;\">\n          <svg width=\"30\" height=\"60\" ` + `style=\"position: absolute; display: none;\">\n          <defs>\n              <marker id=\"markerArrow\" markerWidth=\"8\" markerHeight=\"8\"\n                 refx=\"2\" refy=\"4\"\n                     orient=\"auto\" markerUnits=\"userSpaceOnUse\">\n                  <path d=\"M1,1 L1,7 L7,4 L1,1\" style=\"fill: #339;\" />\n              </marker>\n          </defs>\n          <path d=\"M30,0 Q-10,25 26,50\"\n            style=\"stroke: #88f; stroke-width: 2px; fill: none; ` + `stroke-opacity: 0.5; marker-end: url(#markerArrow);\"\n          ></path>\n          </svg>\n      </div>`);\n    context.hasArrows = true;\n  }\n  format_textdiff(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatTextDiffString(context, delta[0]);\n    context.out('</div>');\n  }\n}\nfunction htmlEscape(text) {\n  let html = text;\n  const replacements = [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;'], [/'/g, '&apos;'], [/\"/g, '&quot;']];\n  for (let i = 0; i < replacements.length; i++) {\n    html = html.replace(replacements[i][0], replacements[i][1]);\n  }\n  return html;\n}\nconst adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(nodeArg) {\n  const node = nodeArg || document;\n  const getElementText = ({\n    textContent,\n    innerText\n  }) => textContent || innerText;\n  const eachByQuery = (el, query, fn) => {\n    const elems = el.querySelectorAll(query);\n    for (let i = 0, l = elems.length; i < l; i++) {\n      fn(elems[i]);\n    }\n  };\n  const eachChildren = ({\n    children\n  }, fn) => {\n    for (let i = 0, l = children.length; i < l; i++) {\n      fn(children[i], i);\n    }\n  };\n  eachByQuery(node, '.jsondiffpatch-arrow', ({\n    parentNode,\n    children,\n    style\n  }) => {\n    const arrowParent = parentNode;\n    const svg = children[0];\n    const path = svg.children[1];\n    svg.style.display = 'none';\n    const destination = getElementText(arrowParent.querySelector('.jsondiffpatch-moved-destination'));\n    const container = arrowParent.parentNode;\n    let destinationElem;\n    eachChildren(container, child => {\n      if (child.getAttribute('data-key') === destination) {\n        destinationElem = child;\n      }\n    });\n    if (!destinationElem) {\n      return;\n    }\n    try {\n      const distance = destinationElem.offsetTop - arrowParent.offsetTop;\n      svg.setAttribute('height', `${Math.abs(distance) + 6}`);\n      style.top = `${-8 + (distance > 0 ? 0 : distance)}px`;\n      const curve = distance > 0 ? `M30,0 Q-10,${Math.round(distance / 2)} 26,${distance - 4}` : `M30,${-distance} Q-10,${Math.round(-distance / 2)} 26,4`;\n      path.setAttribute('d', curve);\n      svg.style.display = '';\n    } catch (err) {\n      // continue regardless of error\n    }\n  });\n};\nexport const showUnchanged = (show, node, delay) => {\n  const el = node || document.body;\n  const prefix = 'jsondiffpatch-unchanged-';\n  const classes = {\n    showing: `${prefix}showing`,\n    hiding: `${prefix}hiding`,\n    visible: `${prefix}visible`,\n    hidden: `${prefix}hidden`\n  };\n  const list = el.classList;\n  if (!list) {\n    return;\n  }\n  if (!delay) {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    list.remove(classes.visible);\n    list.remove(classes.hidden);\n    if (show === false) {\n      list.add(classes.hidden);\n    }\n    return;\n  }\n  if (show === false) {\n    list.remove(classes.showing);\n    list.add(classes.visible);\n    setTimeout(() => {\n      list.add(classes.hiding);\n    }, 10);\n  } else {\n    list.remove(classes.hiding);\n    list.add(classes.showing);\n    list.remove(classes.hidden);\n  }\n  const intervalId = setInterval(() => {\n    adjustArrows(el);\n  }, 100);\n  setTimeout(() => {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    if (show === false) {\n      list.add(classes.hidden);\n      list.remove(classes.visible);\n    } else {\n      list.add(classes.visible);\n      list.remove(classes.hidden);\n    }\n    setTimeout(() => {\n      list.remove(classes.visible);\n      clearInterval(intervalId);\n    }, delay + 400);\n  }, delay);\n};\nexport const hideUnchanged = (node, delay) => showUnchanged(false, node, delay);\nexport default HtmlFormatter;\nlet defaultInstance;\nexport function format(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new HtmlFormatter();\n  }\n  return defaultInstance.format(delta, left);\n}"],
  "mappings": "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",
  "names": []
}
