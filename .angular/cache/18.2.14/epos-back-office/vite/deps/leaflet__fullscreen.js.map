{
  "version": 3,
  "sources": ["../../../../../../node_modules/.pnpm/leaflet.fullscreen@3.0.2/node_modules/leaflet.fullscreen/Control.FullScreen.js"],
  "sourcesContent": ["/*\n * leaflet.fullscreen\n * (c) Bruno B.; MIT License\n * Uses fragments from the package 'screenfull'\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // define an AMD module that requires 'leaflet'\n    // and resolve to an object containing leaflet\n    define('leafletFullScreen', ['leaflet'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // define a CommonJS module that requires 'leaflet'\n    module.exports = factory(require('leaflet'));\n  } else {\n    // Assume 'leaflet' are loaded into global variable already\n    factory(root.L);\n  }\n})(typeof self !== 'undefined' ? self : this, leaflet => {\n  'use strict';\n\n  if (typeof document === 'undefined') {\n    console.warn('\"window.document\" is undefined; leaflet.fullscreen requires this object to access the DOM');\n    return false;\n  }\n  const nativeAPI = (() => {\n    const methodMap = [\n    // Standard\n    ['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n    // New WebKit\n    ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror']];\n    const baseList = methodMap[0];\n    const ret = {};\n    for (const methodList of methodMap) {\n      if (methodList[1] in document) {\n        for (let i = 0; i < methodList.length; i++) {\n          ret[baseList[i]] = methodList[i];\n        }\n        return ret;\n      }\n    }\n    return false;\n  })();\n  const eventNameMap = {\n    change: nativeAPI.fullscreenchange,\n    error: nativeAPI.fullscreenerror\n  };\n  const fullscreenAPI = {\n    request(element, options) {\n      return new Promise((resolve, reject) => {\n        const onFullScreenEntered = function () {\n          this.off('change', onFullScreenEntered);\n          resolve();\n        }.bind(this);\n        this.on('change', onFullScreenEntered);\n        element = element || document.documentElement;\n        const returnPromise = element[nativeAPI.requestFullscreen](options);\n        if (returnPromise instanceof Promise) {\n          returnPromise.then(onFullScreenEntered).catch(reject);\n        }\n      });\n    },\n    exit() {\n      return new Promise((resolve, reject) => {\n        if (!this.isFullscreen) {\n          resolve();\n          return;\n        }\n        const onFullScreenExit = function () {\n          this.off('change', onFullScreenExit);\n          resolve();\n        }.bind(this);\n        this.on('change', onFullScreenExit);\n        const returnPromise = document[nativeAPI.exitFullscreen]();\n        if (returnPromise instanceof Promise) {\n          returnPromise.then(onFullScreenExit).catch(reject);\n        }\n      });\n    },\n    on(event, callback) {\n      const eventName = eventNameMap[event];\n      if (eventName) {\n        document.addEventListener(eventName, callback, false);\n      }\n    },\n    off(event, callback) {\n      const eventName = eventNameMap[event];\n      if (eventName) {\n        document.removeEventListener(eventName, callback, false);\n      }\n    },\n    nativeAPI: nativeAPI\n  };\n  Object.defineProperties(fullscreenAPI, {\n    isFullscreen: {\n      get() {\n        return Boolean(document[nativeAPI.fullscreenElement]);\n      }\n    },\n    isEnabled: {\n      enumerable: true,\n      get() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[nativeAPI.fullscreenEnabled]);\n      }\n    }\n  });\n  leaflet.Control.FullScreen = leaflet.Control.extend({\n    options: {\n      position: 'topleft',\n      title: 'Full Screen',\n      titleCancel: 'Exit Full Screen',\n      forceSeparateButton: false,\n      forcePseudoFullscreen: false,\n      fullscreenElement: false\n    },\n    _screenfull: fullscreenAPI,\n    onAdd(map) {\n      let className = 'leaflet-control-zoom-fullscreen';\n      let container;\n      let content = '';\n      if (map.zoomControl && !this.options.forceSeparateButton) {\n        container = map.zoomControl._container;\n      } else {\n        container = leaflet.DomUtil.create('div', 'leaflet-bar');\n      }\n      if (this.options.content) {\n        content = this.options.content;\n      } else {\n        className += ' fullscreen-icon';\n      }\n      this._createButton(this.options.title, className, content, container, this.toggleFullScreen, this);\n      this._map.fullscreenControl = this;\n      this._map.on('enterFullscreen exitFullscreen', this._toggleState, this);\n      return container;\n    },\n    onRemove() {\n      leaflet.DomEvent.off(this.link, 'click', leaflet.DomEvent.stop).off(this.link, 'click', this.toggleFullScreen, this);\n      if (this._screenfull.isEnabled) {\n        leaflet.DomEvent.off(this._container, this._screenfull.nativeAPI.fullscreenchange, leaflet.DomEvent.stop).off(this._container, this._screenfull.nativeAPI.fullscreenchange, this._handleFullscreenChange, this);\n        leaflet.DomEvent.off(document, this._screenfull.nativeAPI.fullscreenchange, leaflet.DomEvent.stop).off(document, this._screenfull.nativeAPI.fullscreenchange, this._handleFullscreenChange, this);\n      }\n    },\n    _createButton(title, className, content, container, fn, context) {\n      this.link = leaflet.DomUtil.create('a', className, container);\n      this.link.href = '#';\n      this.link.title = title;\n      this.link.innerHTML = content;\n      this.link.setAttribute('role', 'button');\n      this.link.setAttribute('aria-label', title);\n      L.DomEvent.disableClickPropagation(container);\n      leaflet.DomEvent.on(this.link, 'click', leaflet.DomEvent.stop).on(this.link, 'click', fn, context);\n      if (this._screenfull.isEnabled) {\n        leaflet.DomEvent.on(container, this._screenfull.nativeAPI.fullscreenchange, leaflet.DomEvent.stop).on(container, this._screenfull.nativeAPI.fullscreenchange, this._handleFullscreenChange, context);\n        leaflet.DomEvent.on(document, this._screenfull.nativeAPI.fullscreenchange, leaflet.DomEvent.stop).on(document, this._screenfull.nativeAPI.fullscreenchange, this._handleFullscreenChange, context);\n      }\n      return this.link;\n    },\n    toggleFullScreen() {\n      const map = this._map;\n      map._exitFired = false;\n      if (map._isFullscreen) {\n        if (this._screenfull.isEnabled && !this.options.forcePseudoFullscreen) {\n          this._screenfull.exit().then(() => map.invalidateSize());\n        } else {\n          leaflet.DomUtil.removeClass(this.options.fullscreenElement ? this.options.fullscreenElement : map._container, 'leaflet-pseudo-fullscreen');\n          map.invalidateSize();\n        }\n        map.fire('exitFullscreen');\n        map._exitFired = true;\n        map._isFullscreen = false;\n      } else {\n        if (this._screenfull.isEnabled && !this.options.forcePseudoFullscreen) {\n          this._screenfull.request(this.options.fullscreenElement ? this.options.fullscreenElement : map._container).then(() => map.invalidateSize());\n        } else {\n          leaflet.DomUtil.addClass(this.options.fullscreenElement ? this.options.fullscreenElement : map._container, 'leaflet-pseudo-fullscreen');\n          map.invalidateSize();\n        }\n        map.fire('enterFullscreen');\n        map._isFullscreen = true;\n      }\n    },\n    _toggleState() {\n      this.link.title = this._map._isFullscreen ? this.options.title : this.options.titleCancel;\n      this._map._isFullscreen ? L.DomUtil.removeClass(this.link, 'leaflet-fullscreen-on') : L.DomUtil.addClass(this.link, 'leaflet-fullscreen-on');\n    },\n    _handleFullscreenChange(ev) {\n      const map = this._map;\n      if (ev.target === map.getContainer() && !this._screenfull.isFullscreen && !map._exitFired) {\n        this._screenfull.exit().then(() => map.invalidateSize());\n        map.fire('exitFullscreen');\n        map._exitFired = true;\n        map._isFullscreen = false;\n      }\n    }\n  });\n  leaflet.Map.include({\n    toggleFullscreen() {\n      this.fullscreenControl.toggleFullScreen();\n    }\n  });\n  leaflet.Map.addInitHook(function () {\n    if (this.options.fullscreenControl) {\n      this.addControl(leaflet.control.fullscreen(this.options.fullscreenControlOptions));\n    }\n  });\n  leaflet.control.fullscreen = function (options) {\n    return new leaflet.Control.FullScreen(options);\n  };\n  return {\n    leaflet\n  };\n});"],
  "mappings": "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",
  "names": []
}
